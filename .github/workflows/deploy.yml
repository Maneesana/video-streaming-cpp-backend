name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  AWS_REGION: us-east-1
  EC2_INSTANCE_ID: ${{ secrets.EC2_INSTANCE_ID }}
  SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
  APP_DIR: /opt/video-streaming

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: List repository contents
        run: |
          echo "=== Repository root ==="
          ls -la
          echo "=== Contents of src/dto ==="
          ls -la src/dto/
          echo "=== Contents of external ==="
          ls -la external/
          echo "=== Git status ==="
          git status
          echo "=== Git submodule status ==="
          git submodule status

      - name: Fix file case sensitivity
        run: |
          if [ -f "src/dto/DTOs.hpp" ]; then
            mv src/dto/DTOs.hpp src/dto/dtos.hpp
          fi

      - name: Build and test
        run: |
          docker-compose build
          docker-compose up -d
          sleep 15
          curl -f http://localhost:8000/ || exit 1

      - name: Stop containers
        run: docker-compose down

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ env.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          chmod 700 ~/.ssh
          echo "=== SSH key permissions ==="
          ls -la ~/.ssh/
          echo "=== Testing SSH connection ==="
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no -v ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} 'echo "SSH connection successful"'

      - name: Deploy to EC2
        run: |
          # Copy files to EC2
          echo "=== Copying files to EC2 ==="
          scp -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no -r ./* ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/
          scp -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no deploy.sh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/

          # Execute deployment script
          echo "=== Executing deployment script ==="
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} 'chmod +x deploy.sh && ./deploy.sh'
